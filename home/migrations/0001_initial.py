# Generated by Django 5.0.3 on 2024-07-29 20:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Atendete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('idade', models.PositiveIntegerField()),
                ('nacionalidade', models.CharField(max_length=120)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino')], max_length=50)),
                ('profissao', models.CharField(max_length=120)),
                ('descricao', models.TextField()),
                ('formacao', models.TextField()),
                ('foto', models.ImageField(upload_to='imagens_atendente/')),
            ],
        ),
        migrations.CreateModel(
            name='Consultorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Medicamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('especificacoes', models.TextField()),
                ('recomendacoes', models.TextField()),
                ('tipo', models.CharField(max_length=120)),
                ('horario', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('idade', models.PositiveIntegerField()),
                ('nacionalidade', models.CharField(max_length=120)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino')], max_length=50)),
                ('profissao', models.CharField(max_length=120)),
                ('descricao', models.TextField()),
                ('especialidade', models.CharField(choices=[('Clinica Medica', 'Clinica Medica'), ('Pediatria', 'Pediatria'), ('Neurologia', 'Neurologia'), ('Cardiologia', 'Cardiologia'), ('Ginecologia', 'Ginecologia'), ('Ortopedia', 'Ortopedia')], max_length=120)),
                ('formacao', models.TextField()),
                ('foto', models.ImageField(upload_to='imagens_medico/')),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('idade', models.PositiveIntegerField()),
                ('nif', models.CharField(blank=True, max_length=255, null=True)),
                ('nacionalidade', models.CharField(max_length=120)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino')], max_length=50)),
                ('profissao', models.CharField(max_length=120)),
                ('descricao', models.TextField()),
                ('foto', models.ImageField(upload_to='imagens_paciente/')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is admin')),
                ('is_paciente', models.BooleanField(default=False, verbose_name='Is paciente')),
                ('is_medico', models.BooleanField(default=False, verbose_name='Is medico')),
                ('is_atendente', models.BooleanField(default=False, verbose_name='Is atendente')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Consulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(blank=True, choices=[('Ginecologia', 'Ginecologia'), ('Cirugia', 'Cirugia'), ('Dermatologia', 'Dermatologia'), ('Odontologia', 'Odontolgia'), ('Oftamologia', 'Oftamologia'), ('Nutricao', 'Nutricao')], max_length=255, null=True)),
                ('estado', models.CharField(blank=True, choices=[('Pendente', 'Pendente'), ('Marcada', 'Marcada'), ('Realizada', 'Realizada'), ('Pagamento', 'Pagamento')], max_length=255, null=True)),
                ('medico_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.medico')),
                ('paciente_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.FloatField()),
                ('consulta_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.consulta')),
                ('paciente_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='BancoUrgencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('especialidade', models.CharField(choices=[('Clinica Medica', 'Clinica Medica'), ('Pediatria', 'Pediatria'), ('Neurologia', 'Neurologia'), ('Cardiologia', 'Cardiologia'), ('Ginecologia', 'Ginecologia'), ('Ortopedia', 'Ortopedia')], max_length=120)),
                ('prioridade', models.CharField(choices=[('alta', 'Alta'), ('media', 'Média'), ('baixa', 'Baixa')], max_length=10)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em atendimento', 'Em Atendimento'), ('concluida', 'Concluída')], max_length=20)),
                ('consulta', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.consulta')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Ponto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(auto_now_add=True)),
                ('hora', models.TimeField(auto_now_add=True)),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.medico')),
            ],
        ),
        migrations.CreateModel(
            name='Alocacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horario_inicio', models.DateTimeField()),
                ('horario_fim', models.DateTimeField()),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_atendimento', 'Em Atendimento'), ('concluida', 'Concluída')], max_length=20)),
                ('consultorio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.consultorio')),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.medico')),
                ('paciente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.paciente')),
                ('ponto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.ponto')),
            ],
        ),
        migrations.CreateModel(
            name='Receita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField()),
                ('consulta_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.consulta')),
                ('medico_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.medico')),
                ('paciente_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='ReceitaMedicamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dosagem', models.CharField(max_length=255)),
                ('medicamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.medicamento')),
                ('receita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.receita')),
            ],
        ),
    ]
